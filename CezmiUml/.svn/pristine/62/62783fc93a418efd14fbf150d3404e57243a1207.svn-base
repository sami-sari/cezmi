package com.samisari.commands.uml;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import com.samisari.guidesigner.CmdWindow;

public class CmdClass extends CmdWindow {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	protected List<String> fields = new ArrayList<String>();
	protected List<String> methods = new ArrayList<String>();

	@Override
	public void paint(Graphics g) {
		Color tempColor = g.getColor();
		Font tempFont = g.getFont();
		g.setColor(Color.BLACK);
		if (fields==null)
			fields = new ArrayList<String>();
		for (int i = 0; fields!=null && i < fields.size(); i++) {
			g.drawString(fields.get(i), getX() + 10, getY() + 50
					+ (i * 20));
		}
		g.drawLine(getX(), getY() + 50 + (fields.size() * 20), getRight(),
				getY() + 50 + (fields.size() * 20));
		for (int i = 0; methods!=null && i < methods.size(); i++) {
			g.drawString(methods.get(i), getX() + 10, getY() + 70
					+ ((fields.size() + i) * 20));
		}
		g.setFont(tempFont);
		super.paint(g);
		g.setColor(tempColor);
	}

	public void setFields(String fields) {
		this.fields.clear();
		StringTokenizer st = new StringTokenizer(fields, ";");
		while (st.hasMoreTokens()) {
			this.fields.add(st.nextToken());
		}
	}

	public void setMethods(String methods) {
		this.methods.clear();
		StringTokenizer st = new StringTokenizer(methods, ";");
		while (st.hasMoreTokens()) {
			this.methods.add(st.nextToken());
		}
	}

	public static String getCommandName() {
		return "UML Class";
	}

	public List<String> getFields() {
		return fields;
	}

	public void setFields(List<String> fields) {
		this.fields = fields;
	}

	public List<String> getMethods() {
		return methods;
	}

	public void setMethods(List<String> methods) {
		this.methods = methods;
	}
	
	@Override
	public void openContextMenu() {
		super.openContextMenu();
		CmdClassWizard wizard = new CmdClassWizard(this);
		wizard.setVisible(true);
		wizard.pack();
	}
}
